!Расчитывает скругления сопряжения отрезков!Результат выводит в формате X, Y, status_code!coord[i][1] - X!coord[i][2] - Y!coord[i][3] - Радиус окружности!coord_out[inx_out][1] - X!coord_out[inx_out][2] - Y!coord_out[inx_out][3] - status_code!coord_out[inx_out][4] - Номер сегемента во входном массивеdbg = 0if dbg then	dim coord_t[3][3] : i=0	i=i+1 : coord_t[i][1] = 0 : coord_t[i][2] = 0 : coord_t[i][3] = 0	i=i+1 : coord_t[i][1] = 1 : coord_t[i][2] = 1 : coord_t[i][3] = 0.5	i=i+1 : coord_t[i][1] = 1 : coord_t[i][2] = 2 : coord_t[i][3] = 0	coord = coord_t	parameters coord = coordendifEPS = 0.0001ipx = 0 : ipy = 0px1 = 0 : py1 = 0px2 = 0 : py2 = 0ang_arc = 0 : l_arc = 0dr = 0state_arc = -10dim coord_out[][4]x1=0 : y1=0 : x2=0 : y2=0 : x3=0 : y3=0 : r_arc = 0if inx<EPS then inx = vardim1(coord)inx_out = 0!Проходим по точкам, рассчитываем скругленияfor i=1 to inx	x2 = coord[i][1]	y2 = coord[i][2]	r_arc = coord[i][3]	if r_arc>EPS and inx-i>EPS and i-1>EPS then		x1 = coord[i-1][1]		y1 = coord[i-1][2]		x3 = coord[i+1][1]		y3 = coord[i+1][2]		call "macro_arc" parameters x1=x1, y1=y1,									x2=x2, y2=y2,									x3=x3, y3=y3,									r_arc=r_arc,									type_arc=1,									returned_parameters ipx, ipy, px1, py1, px2, py2, ang_arc, l_arc, dr, state	else		state = 0 !Скругление не требуется	endif	if state>EPS then		inx_out = inx_out + 1		coord_out[inx_out][1] = px1		coord_out[inx_out][2] = py1		coord_out[inx_out][3] = status_code		coord_out[inx_out][4] = i		inx_out = inx_out + 1		coord_out[inx_out][1] = ipx		coord_out[inx_out][2] = ipy		coord_out[inx_out][3] = 900		coord_out[inx_out][4] = i		inx_out = inx_out + 1		coord_out[inx_out][1] = px2		coord_out[inx_out][2] = py2		coord_out[inx_out][3] = 3000+status_code		coord_out[inx_out][4] = i	else		inx_out = inx_out + 1		coord_out[inx_out][1] = x2		coord_out[inx_out][2] = y2		coord_out[inx_out][3] = status_code		coord_out[inx_out][4] = i	endifnext iif dbg then	pen 6	for i=1 to vardim1(coord_t)		put coord_t[i][1],coord_t[i][2],1	next i	if NSP>0 then POLY2_ NSP/3, 1, get(NSP)		pen 3	for i=1 to vardim1(coord_out)		put coord_out[i][1],coord_out[i][2],coord_out[i][3]	next i	if NSP>0 then POLY2_ NSP/3, 1, get(NSP)endifexit coord_out