if abs(razm_l)<EPS then endPAPER_TO_MODEL = GLOB_SCALE / 1000if use_hotspot then	for i=5 to 10		coord_razm[inx_razm][i] = coord_razms[inx_razm][i] * PAPER_TO_MODEL	next iendif!Отдаление текста, после которого начинается построение выноскиaccuare = 5*PAPER_TO_MODELr = request ("View_Rotangle", "", _angleViewRot)_totalRotate	= (ang_razm+90) MOD 360!Поворот текстаif type_razm = 1 then angle_txt = ang_razm - 90if type_razm = 2 then	angle_txt = -90	if (ang_razm>180 and ang_razm<360) | GLOB_VIEW_TYPE = 9 then angle_txt=90endif!Поворот засечекangle_zas = 45 * (SYMB_MIRRORED - not(SYMB_MIRRORED))+180if (_totalRotate > (90 + EPS) & _totalRotate < (270 + EPS)) then angle_zas = angle_zas - 180!Размерные стилиwidth_factor = 1charspace_factor = 1razm_f_anc = 8razm_s_anc = 2razm_anc = 5DEFINE STYLE{2} "razm" Shrift , Shrift_razm, Shrift_tipsss=request("Height_of_style", "razm", height, descent, leading)dx_txt = (height/2-descent-leading-Shrift_razm/2)*PAPER_TO_MODEL*0.5height = height * PAPER_TO_MODEL!Редектирование начала/концаif use_hotspot then	HOTSPOT2 0, coord_razm[inx_razm][2], unID, coord_razm[inx_razm][1], 1+128: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][1], coord_razm[inx_razm][2], unID, coord_razm[inx_razm][1], 2: unID=unID+1	HOTSPOT2 -1, coord_razm[inx_razm][2], unID, coord_razm[inx_razm][1], 3: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][1], 0, unID, coord_razm[inx_razm][2], 1+128: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][1], coord_razm[inx_razm][2], unID, coord_razm[inx_razm][2], 2: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][1], -1, unID, coord_razm[inx_razm][2], 3: unID=unID+1	HOTSPOT2 0, coord_razm[inx_razm][4], unID, coord_razm[inx_razm][3], 1+128: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][3], coord_razm[inx_razm][4], unID, coord_razm[inx_razm][3], 2: unID=unID+1	HOTSPOT2 -1, coord_razm[inx_razm][4], unID, coord_razm[inx_razm][3], 3: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][3], 0, unID, coord_razm[inx_razm][4], 1+128: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][3], coord_razm[inx_razm][4], unID, coord_razm[inx_razm][4], 2: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][3], -1, unID, coord_razm[inx_razm][4], 3: unID=unID+1endifif dbg then	text2 coord_razm[inx_razm][1], coord_razm[inx_razm][2],"1"	text2 coord_razm[inx_razm][3], coord_razm[inx_razm][4],"2"endifsgnx = SGN(coord_razm[inx_razm][5])!Стали в начало, развернулисьadd2 coord_razm[inx_razm][1], coord_razm[inx_razm][2]rot2 ang_razm+90!Редактирование отступаif use_hotspot then	HOTSPOT2 0, razm_l/3, unID, coord_razm[inx_razm][5], 1+128+1024, coord_razms[inx_razm][5]: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][5], razm_l/3, unID, coord_razm[inx_razm][5], 2+1024, coord_razms[inx_razm][5]: unID=unID+1	HOTSPOT2 -1, razm_l/3, unID, coord_razm[inx_razm][5], 3+1024, coord_razms[inx_razm][5]: unID=unID+1	HOTSPOT2 0, razm_l/4, unID, coord_razm[inx_razm][10], 1+128+1024, coord_razms[inx_razm][10]: unID=unID+1	HOTSPOT2 coord_razm[inx_razm][10]*sgnx, razm_l/4, unID, coord_razm[inx_razm][10], 2+1024, coord_razms[inx_razm][10]: unID=unID+1	HOTSPOT2 -1*sgnx, razm_l/4, unID, coord_razm[inx_razm][10], 3+1024, coord_razms[inx_razm][10]: unID=unID+1endifotstup = coord_razm[inx_razm][5] * PAPER_TO_MODELotstup_vinosnih = coord_razm[inx_razm][10]if abs(zasechka) < EPS then zasechka = 1 * PAPER_TO_MODELif abs(vistup) < EPS then vistup = zasechkaif abs(otstup) < EPS then otstup = max(5 * PAPER_TO_MODEL, height+dx_txt)sgnx = SGN(otstup)if abs(otstup) < vistup then otstup = vistup*sgnxif otstup_vinosnih < EPS then otstup_vinosnih = vistup*0.2if abs(otstup)-otstup_vinosnih<vistup then otstup_vinosnih = abs(otstup)-vistup!Линия размераline2 otstup, -vistup, otstup, razm_l + vistup!Выносная к первой точкеline2 otstup_vinosnih*sgnx, 0, otstup + vistup*sgnx, 0!Выносная ко второй точкеline2 otstup_vinosnih*sgnx, razm_l, otstup + vistup*sgnx, razm_l!Засечкиadd2 otstup, 0rot2 angle_zasline2 -zasechka, 0, zasechka, 0del 2add2 otstup, razm_lrot2 angle_zasline2 -zasechka, 0, zasechka, 0del 2!Подготовка текстовых блоков и определение необходимости сдвинуть текстtxtv = fstr_razm : tblockname = "txt_razm_f" : name_style = "razm" : gosub "get_block"razm_f_l = 0.5*tbwidthif STRLEN(sstr_razm)>EPS then	txtv = sstr_razm : tblockname = "txt_razm_s" : name_style = "razm" : gosub "get_block"	razm_s_l = 0.5*tbwidth	razm_fs = max(razm_f_l, razm_s_l)else	razm_fs = razm_f_l	razm_s_l = 0endif!Сдвигаем первый размер, если нужно, и если положение текста не задано (равно 0)!Сдвигаем всегда вправоif (razm_fs-razm_l*0.5)>EPS and not(abs(coord_razm[inx_razm][6])>EPS or abs(coord_razm[inx_razm][7])>EPS) and not(abs(coord_razm[inx_razm][8])>EPS or abs(coord_razm[inx_razm][9])>EPS) then	coord_razm[inx_razm][7] = razm_fs+razm_l/2+zasechka	coord_razm[inx_razm][9] = razm_fs+razm_l/2+zasechkaendif!!Первый размерif use_hotspot then	HOTSPOT2 otstup, razm_l/2+coord_razm[inx_razm][7], unID, coord_razm[inx_razm][6], 1+128+1024, coord_razms[inx_razm][6]: unID=unID+1	HOTSPOT2 otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7], unID, coord_razm[inx_razm][6], 2+1024, coord_razms[inx_razm][6]: unID=unID+1	HOTSPOT2 otstup-1, razm_l/2+coord_razm[inx_razm][7], unID, coord_razm[inx_razm][6], 3+1024, coord_razms[inx_razm][6]: unID=unID+1	HOTSPOT2 otstup+coord_razm[inx_razm][6], razm_l/2, unID, coord_razm[inx_razm][7], 1+128+1024, coord_razms[inx_razm][7]: unID=unID+1	HOTSPOT2 otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7], unID, coord_razm[inx_razm][7], 2+1024, coord_razms[inx_razm][7]: unID=unID+1	HOTSPOT2 otstup+coord_razm[inx_razm][6], razm_l/2-1, unID, coord_razm[inx_razm][7], 3+1024, coord_razms[inx_razm][7]: unID=unID+1endifadd2 otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7]RICHTEXT2 -dx_txt-tbheight/2, 0, "txt_razm_f"del 1!Выносная линияif abs(coord_razm[inx_razm][6])>accuare or abs(coord_razm[inx_razm][7])-razm_l/2>EPS then	line2 otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7]-razm_f_l, otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7]+razm_f_l	line2 otstup+coord_razm[inx_razm][6], razm_l/2+coord_razm[inx_razm][7]-razm_f_l*sgn(coord_razm[inx_razm][7]), otstup, razm_l/2endifif STRLEN(sstr_razm)>EPS then	!Второй размер	if use_hotspot then		HOTSPOT2 otstup, razm_l/2+coord_razm[inx_razm][9], unID, coord_razm[inx_razm][8], 1+128+1024, coord_razms[inx_razm][8]: unID=unID+1		HOTSPOT2 otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9], unID, coord_razm[inx_razm][8], 2+1024, coord_razms[inx_razm][8]: unID=unID+1		HOTSPOT2 otstup-1, razm_l/2+coord_razm[inx_razm][9], unID, coord_razm[inx_razm][8], 3+1024, coord_razms[inx_razm][8]: unID=unID+1		HOTSPOT2 otstup+coord_razm[inx_razm][8], razm_l/2, unID, coord_razm[inx_razm][9], 1+128+1024, coord_razms[inx_razm][9]: unID=unID+1		HOTSPOT2 otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9], unID, coord_razm[inx_razm][9], 2+1024, coord_razms[inx_razm][9]: unID=unID+1		HOTSPOT2 otstup+coord_razm[inx_razm][8], razm_l/2-1, unID, coord_razm[inx_razm][9], 3+1024, coord_razms[inx_razm][9]: unID=unID+1	endif	add2 otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9]	RICHTEXT2 dx_txt+tbheight/2, 0, "txt_razm_s"	del 1	!Выносная линия	if abs(coord_razm[inx_razm][8])>accuare or abs(coord_razm[inx_razm][9])-razm_l/2>EPS then		line2 otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9]-razm_s_l, otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9]+razm_s_l		line2 otstup+coord_razm[inx_razm][8], razm_l/2+coord_razm[inx_razm][9]-razm_s_l*sgn(coord_razm[inx_razm][9]), otstup, razm_l/2	endifendifend"get_block":	if vartype(tblockname)<>2 then tblockname = "emp"	if vartype(txtv)<>2 then txtv = str("%.0",txtv)	paragraph tblockname+"p" 2,			0, 0, 0,			1			style name_style			txtv	endparagraph	TEXTBLOCK tblockname 0, razm_anc, angle_txt, width_factor, charspace_factor, 1,tblockname+"p"	width = Shrift_razm : height = Shrift_razm	n = REQUEST("TEXTBLOCK_INFO", tblockname, width, height)	tbwidth = width * PAPER_TO_MODEL	tbheight = height * PAPER_TO_MODEL	sss=request("Height_of_style", name_style, height, descent, leading)	dx_txt = (height/2-descent-leading-Shrift_razm/2)*PAPER_TO_MODELreturn