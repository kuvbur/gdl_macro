EPS = 0.00001dim desk_arr[3][4]for ii=1 to 3	for jj=1 to 4		desk_arr[ii][jj] = ""	next jjnext ii!Имя параметра Значение Единица_измерения_1 Единица_измерения_2N_ROW_EDIZM = 1N_ROW_COST = 2N_ROW_ZAP = 3! -------------- Наименование и обозначение берём из штриховки материала -------------------naen = "" : f_type = 0bSucceed = request{2} ("Building_Material_info", mat_inx, "gs_bmat_cutfill_properties", f_type, en, en)n = REQUEST ("Name_of_fill", f_type, naen)		dim type_obozn[]: i=0		i=i+1 : type_obozn[i]="(ГОСТ"		i=i+1 : type_obozn[i]="(ТУ"		i=i+1 : type_obozn[i]="(Серия"		i=i+1 : type_obozn[i]="(СТО"		p_start = 0		for i=1 to vardim1(type_obozn)			p_start=STRSTR(naen, type_obozn[i], 1)			if p_start>EPS then i=vardim1(type_obozn)		next i		p_end = 0		if p_start > EPS then			t_naen = STRSUB (naen, p_start, strlen(naen))			p_end = STRSTR(t_naen, ")", 1)		endif		if p_start > EPS and p_end > EPS then			obozn = STRSUB (t_naen, 2, p_end-2)			naen = STRSUB (naen, 1, p_start-1) + STRSUB (t_naen, p_end+1, strlen(t_naen))		endif!--------------------------------------------------------------------------------------------! -------------- Из поля Производитель возьмём данные о расходе -------------------!Возможные параметры - "Ед.Изм", "Расход", "Кзап"desk = ""n = REQUEST{2} ("Building_Material_info", mat_inx, "gs_bmat_manufacturer", desk)n_t = STRSTR(desk, ";")n_par = STRSTR(desk, "=")if n_t>0 or n_par>0 then	for ll = 1 to 3		n_t = STRSTR(desk, ";")		if n_t>0 then			part = STRSUB(desk, 1, n_t-1)			desk = STRSUB(desk, n_t+1, strlen(desk))		else			ll=3			part = desk		endif		n_par = STRSTR(part, "=")		par = "" : val = "" : cost_1 = "" : cost_2 = "" : n_row = 0		if n_par>0 then			par = STRSUB(part, 1, n_par-1)			if par = "Ед.Изм" then n_row = N_ROW_EDIZM			if par = "Расход" then n_row = N_ROW_COST			if par = "Кзап" then n_row = N_ROW_ZAP			if n_row > 0 then				val = STRSUB(part, n_par+1, strlen(part))				n_cost = STRSTR(val, "/") !Если нашли данные о расходе - разобъём единицы измерения				if n_cost>0 then					n_edizm = 0					for nn=1 to n_cost-1						is_text=1						symb = STRSUB (val, nn, 1)						for kk=0 to 9							if symb=str("%.0", kk) then								is_text=0								kk=9							endif						next kk						if is_text=1 then							if symb="." then is_text=0							if symb="," then is_text=0						endif						if is_text then 							n_edizm = nn-1							nn=n_cost-1						endif					next nn					cost_1 = STRSUB(val, n_edizm+1, n_cost-n_edizm-1)					cost_2 = STRSUB(val, n_cost+1, strlen(val))					val = STRSUB(val, 1, n_edizm)				endif				desk_arr[n_row][1]=par				desk_arr[n_row][2]=val				desk_arr[n_row][3]=cost_1				desk_arr[n_row][4]=cost_2			endif		endif	next llendif!Попробуем вычислить недостающие значения площади, объёма и толщиныif mat_area>EPS and mat_volume>EPS and mat_thickness<EPS then mat_thickness = mat_volume / mat_areaif mat_area>EPS and mat_thickness>EPS and mat_volume<EPS then mat_volume = mat_area * mat_thicknessif mat_volume>EPS and mat_thickness>EPS and mat_area<EPS then mat_area = mat_volume / mat_thickness!По умолчанию - выводим объём в кубахqty = mat_volumecost = "куб.м."!Если единицы измерения в спецификации или расходе "кв.м." то берём площадьif desk_arr[N_ROW_EDIZM][2]="кв.м." or desk_arr[N_ROW_COST][4]="кв.м." then 	qty = mat_area	if mat_thickness > 0.005 then naen = naen + ", t="+ str("%.0mm",mat_thickness) +"мм."endif!Если нужно выдать массу, но расход не указан - умножаем объём на плотностьif desk_arr[N_ROW_EDIZM][2]="кг." and desk_arr[N_ROW_COST][1]="" then 	density = 0	n = REQUEST{2} ("Building_Material_info", mat_inx, "gs_bmat_physical_properties", thermalConductivity, density, heatCapacity, embodiedEnergy, embodiedCarbon)	qty = mat_volume * densityendif!Если расход указан - умножаем количество на расходif desk_arr[N_ROW_COST][1]<>"" then	var = desk_arr[N_ROW_COST][2]	gosub "str2num"	if vartype(num)=1 and num>EPS then		qty = qty * num		cost = desk_arr[N_ROW_COST][3]	endifendif!Если дана только площадь - выводим в кв.м.if mat_area>EPS and mat_volume<EPS and mat_thickness<EPS and qty<EPS then 	qty = mat_area	cost = "кв.м."endif!Если дан только объём - выводим в куб.м.if mat_area<EPS and mat_volume>EPS and mat_thickness<EPS and qty<EPS then 	qty = mat_volume	cost = "куб.м."endif!Добавляем запасif desk_arr[N_ROW_ZAP][1]<>"" then	var = desk_arr[N_ROW_ZAP][2]	gosub "str2num"	if vartype(num)=1 and num>EPS then		qty = qty + qty * num	endifendifkol_vo_spec = 0komment=""if qty>EPS then	kol_vo_spec = qty	komment=costendifgoto "m_end""str2num":	!---------- String to num ---------------	num = 0 : dot = "."	if strstr(var, dot)<EPS then dot = ","	n_t = strstr(var, dot)	if n_t > 0 then		t_int = STRSUB(var, 1, n_t-1)		t_ceil = STRSUB(var, n_t+1, strlen(var))		x = SPLIT (t_int, "%n", n_int)		x = SPLIT (t_ceil, "%n", n_ceil)		n_zero = 10**strlen(t_ceil)		num = n_int + n_ceil/n_zero		!		re_var = str("%."+str("%.0",strlen(t_ceil)), num)		!		check = (re_var = var)		!Доработать проверку для разных разделителей	else		x = SPLIT (var, "%n", num)	endif	!---------------------------------------return"m_end":parameters kol_vo_spec=kol_vo_spec, komment=kommentEXIT kol_vo_spec, komment