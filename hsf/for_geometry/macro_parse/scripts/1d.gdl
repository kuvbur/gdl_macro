!Расчитывает скругления сопряжения отрезков
!Результат выводит в формате X, Y, status_code

!marc_coord.out[inx_out].x - X
!marc_coord.out[inx_out].y - Y
!marc_coord.out[inx_out].s - status_code
!marc_coord.out[inx_out].inx - Номер сегемента во входном массиве
EPS = 0.0001

ipx = 0 : ipy = 0
px1 = 0 : py1 = 0
px2 = 0 : py2 = 0
ang_arc = 0 : l_arc = 0
dr = 0
state = 0
marc_coord.error = ""
if haskey(marc_coord.out) then _d = REMOVEKEY (marc_coord.out)
if not(haskey(marc_coord.in)) then
	marc_coord.error = marc_coord.error + "; not(haskey(marc_coord.in))"
	goto "m_end"
endif
if not(haskey(marc_coord.status_code)) then marc_coord.status_code = 1

inx_out = 0
!Проходим по точкам, рассчитываем скругления
inx = vardim1(marc_coord.in)
for i=1 to inx
	if haskey(marc_coord.in[i].r) then
		if marc_coord.in[i].r>EPS and inx-i>EPS and i-1>EPS then
			call "macro_arc" parameters x1=marc_coord.in[i-1].x, y1=marc_coord.in[i-1].y,
										x2=marc_coord.in[i].x, y2=marc_coord.in[i].y,
										x3=marc_coord.in[i+1].x, y3=marc_coord.in[i+1].y,
										r_arc=marc_coord.in[i].r,
										type_arc=1,
										returned_parameters ipx, ipy, px1, py1, px2, py2, ang_arc, l_arc, dr, state
		else
			state = 0 !Скругление не требуется
		endif
	else
		state = 0
	endif
	if state>EPS and abs(ang_arc)>EPS then
		inx_out = inx_out + 1
		marc_coord.out[inx_out].x = px1
		marc_coord.out[inx_out].y = py1
		marc_coord.out[inx_out].s = marc_coord.status_code
		marc_coord.out[inx_out].inx = i

		inx_out = inx_out + 1
		marc_coord.out[inx_out].x = ipx
		marc_coord.out[inx_out].y = ipy
		marc_coord.out[inx_out].s = 900
		marc_coord.out[inx_out].inx = i

		inx_out = inx_out + 1
		marc_coord.out[inx_out].x = px2
		marc_coord.out[inx_out].y = py2
		marc_coord.out[inx_out].s = 3000+marc_coord.status_code
		marc_coord.out[inx_out].inx = i
	else
		inx_out = inx_out + 1
		marc_coord.out[inx_out].x = marc_coord.in[i].x
		marc_coord.out[inx_out].y = marc_coord.in[i].y
		marc_coord.out[inx_out].s = marc_coord.status_code
		marc_coord.out[inx_out].inx = i
	endif
	marc_coord.error = "ok"
next i

"m_end":
exit marc_coord
