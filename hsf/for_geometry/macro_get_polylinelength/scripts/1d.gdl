coord.error = "-"EPS = 0.000001dict polythlength = 0flag_data = 0if bdict then 	if haskey(coord.length) then _d = REMOVEKEY (coord.length)	if haskey(coord.out) and flag_data = 0 then 		polyth.in = coord.out		flag_data = 1	endif	if haskey(coord.in) and flag_data = 0 then 		polyth.in = coord.in		flag_data = 1	endif	if flag_data = 0 then		coord.error = "no data"		goto "m_end"	endifelse	if vardim1(coord_arr)<2 then goto "m_end"	for i=1 to vardim1(coord_arr)		polyth.in[i].x = coord_arr[i][1]		polyth.in[i].y = coord_arr[i][2]		if vardim2(coord_arr)=3 then polyth.in[i].s = coord_arr[i][3]	next iendifcx = 0 : cy = 0 : flag_r = 1 : r = 0vx1 = 0 : vx2 = 0 : vy1 = 0 : vy2 = 0for i=2 to vardim1(polyth.in)	if haskey(polyth.in[i].s) then		iStatus = int(polyth.in[i].s)	else		iStatus = 1	endif	if (iStatus > 0) then iStatus = iStatus - iStatus % 100	if flag_r = 1 then 		r = sqr((polyth.in[i].x-polyth.in[i-1].x)*(polyth.in[i].x-polyth.in[i-1].x) + (polyth.in[i].y-polyth.in[i-1].y)*(polyth.in[i].y-polyth.in[i-1].y))		flag_r = 0	endif	if iStatus = 900 then flag_r = 1	_length = 0	if iStatus = 0 then _length = sqr((polyth.in[i].x-polyth.in[i-1].x)*(polyth.in[i].x-polyth.in[i-1].x) + (polyth.in[i].y-polyth.in[i-1].y)*(polyth.in[i].y-polyth.in[i-1].y))	if iStatus = 4000 then _length = (PI * r * polyth.in[i].y)/180	if iStatus = 3000 then		vx1 = abs(polyth.in[i-2].x-polyth.in[i-1].x)		vy1 = abs(polyth.in[i-2].y-polyth.in[i-1].y)		vx2 = abs(polyth.in[i].x-polyth.in[i-1].x)		vy2 = abs(polyth.in[i].y-polyth.in[i-1].y)		t = (vx1*vx2+vy1*vy2)/(sqr(vx1*vx1+vy1*vy1)*sqr(vx2*vx2+vy2*vy2))		if t < -1-EPS then t=-1		if t>1+EPS then t= 1		_length = (PI * r * acs(t))/180		text2 polyth.in[i].x, polyth.in[i].y, _length	endif	length = length + _lengthnext icoord.error = "ok"goto "m_end""m_end":if bdict then	coord.length = length	exit coordelse	exit lengthendif