!dict coord_rotate!call "macro_rotate" parameters coord = ogr_data.st.set.path ,ang = 60, axis = 1, bDict=1, RETURNED_PARAMETERS coord_rotateEPS = 0.0001dim rot_arr[3][3]dim _arr[][]dim _t[][]ROT_X = 1ROT_Y = 2ROT_Z = 3if bDict then	coord.error = "-"	if not(haskey(coord.in)) then goto "m_end"	if vardim1(coord.in)<2 then goto "m_end"	if abs(ang)<EPS then		if haskey(coord.out) then _d = REMOVEKEY (coord.out)		coord.out = coord.in		coord.error = "ok"		goto "m_end"	endif	if haskey(coord.ang) then ang = coord.ang	if haskey(coord.axis) then axis = coord.axis	for i=1 to vardim1(coord.in)		if haskey(coord.in[i].x) then			_arr[i][1] = coord.in[i].x		else			_arr[i][1] = 0		endif		if haskey(coord.in[i].y) then			_arr[i][2] = coord.in[i].y		else			_arr[i][2] = 0		endif		if haskey(coord.in[i].z) then			_arr[i][3] = coord.in[i].z		else			_arr[i][3] = 0		endif	next ielse	_arr = coord_arrendifif abs(ang)<EPS then goto "m_end"dim rot_arr[3][3]if axis = ROT_X then	i=0	i=i+1 : rot_arr[i][1]=1 : rot_arr[i][2]=0 : rot_arr[i][3]=0	i=i+1 : rot_arr[i][1]=0 : rot_arr[i][2]=cos(ang) : rot_arr[i][3]=-sin(ang)	i=i+1 : rot_arr[i][1]=0 : rot_arr[i][2]=sin(ang) : rot_arr[i][3]=cos(ang)endifif axis = ROT_Y then	i=0	i=i+1 : rot_arr[i][1]=cos(ang)	: rot_arr[i][2]=0	: rot_arr[i][3]=sin(ang)	i=i+1 : rot_arr[i][1]=0			: rot_arr[i][2]=1	: rot_arr[i][3]=0	i=i+1 : rot_arr[i][1]=-sin(ang)	: rot_arr[i][2]=0	: rot_arr[i][3]=cos(ang)endifif axis = ROT_Z then	i=0	i=i+1 : rot_arr[i][1]=cos(ang) : rot_arr[i][2]=-sin(ang) : rot_arr[i][3]=0	i=i+1 : rot_arr[i][1]=sin(ang) : rot_arr[i][2]=cos(ang) : rot_arr[i][3]=0	i=i+1 : rot_arr[i][1]=0 : rot_arr[i][2]=0 : rot_arr[i][3]=1endifdim _t[][]for i=1 to vardim1(_arr)	for j=1 to 3		_t[i][j] = 0		for k=1 to 3			_t[i][j] = _t[i][j] + _arr[i][k] * rot_arr[k][j]		next k	next jnext iif bDict then	if haskey(coord.out) then _d = REMOVEKEY (coord.out)	coord.out = coord.in	for i=1 to vardim1(_t)		coord.out[i].x = _t[i][1]		coord.out[i].y = _t[i][2]		coord.out[i].z = _t[i][3]	next i	coord.error = "ok"else	coord_arr = _tendif"m_end":if bDict then	exit coordelse	exit coord_arrendif