if haskey(poly_data.is3d) then
	if not(poly_data.is3d) then end
endif

rotx rx
roty ry
rotz rz

uniID=7500

gosub "set_hotspot"
if haskey(poly_data.hotspot_addz) then hotspot_addz = poly_data.hotspot_addz
if abs(hotspot_addz)>EPS then
	addz hotspot_addz
	gosub "set_hotspot"
	del 1
endif

PUT poly_point_xy [1][1],poly_point_xy [1][2],poly_point_xy [1][3]
FOR x = 1 TO poly_n-1+poly_closed
	IF ABS(poly_3point_d [x]) < EPS  THEN 
		PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3]
	ENDIF
	IF ABS(poly_3point_d [x]) > EPS THEN 
		IF (ABS(poly_point_xy [x][1]-poly_point_xy [x+1][1]) > EPS) OR (ABS(poly_point_xy [x][2]-poly_point_xy [x+1][2]) > EPS) THEN
			poly_res_temp = poly_element_res [1][x]
			if abs(poly_res_temp)<EPS then poly_res_temp = 1
			inc_temp = 0
			punto_arco_ang = ((poly_3point_angle [x][2]-poly_3point_angle [x][1])/poly_res_temp)
			punto_arco_dz = (poly_point_xy[x+1][3]-poly_point_xy[x][3])/poly_res_temp
			FOR g = 1 TO poly_res_temp+1
				IF poly_3point_d [x] > 0 THEN
					punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
					punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][1]+punto_arco_ang *(g-1))*poly_3point_radius [x]
				ELSE
					punto_arco_x = poly_3point_xy [x][1]+COS(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
					punto_arco_y = poly_3point_xy [x][2]+SIN(poly_3point_angle [x][2]-punto_arco_ang *(g-1))*poly_3point_radius [x]
				ENDIF
				punto_arco_z = poly_point_xy [x][3]+punto_arco_dz * (g-1)
				PUT punto_arco_x,punto_arco_y,punto_arco_z
			NEXT g
		ELSE
			PUT poly_point_xy [x+1][1],poly_point_xy [x+1][2],poly_point_xy [x+1][3]
		ENDIF
	ENDIF
NEXT x
if show_line_3d then
	FOR x = 1 to NSP/3-1
		LIN_ GET(3),USE(3)
	NEXT x
endif

tt= max(GET(NSP))
del 3
goto "3d_end"

"set_hotspot":
	salta_punti_editabili = 0
	FOR x = 1 TO poly_n -1+poly_closed
		IF ABS(ABS(poly_pointbis_x [x])- ABS(poly_pointbis_check_x [x]))> 0.001 THEN 
			salta_punti_editabili = 1
		ELSE
			IF ABS(ABS(poly_pointbis_y [x])- ABS(poly_pointbis_check_y [x])) > 0.001 THEN 
				salta_punti_editabili = 1
			ENDIF
		ENDIF
	NEXT x
	FOR x = 1 TO poly_n
		if use_z then
			HOTSPOT poly_point_xy [x][1],poly_point_xy [x][2],0,uniID,poly_point_xy [x][3],1+128 : uniID=uniID+1
			HOTSPOT poly_point_xy [x][1],poly_point_xy [x][2],poly_point_xy [x][3],uniID,poly_point_xy [x][3],2 : uniID=uniID+1
			HOTSPOT poly_point_xy [x][1],poly_point_xy [x][2],-1,uniID,poly_point_xy [x][3],3 : uniID=uniID+1
		endif
		if use_x then
			HOTSPOT 0,poly_point_xy [x][2],poly_point_xy [x][3],uniID,poly_point_xy [x][1],1+128 : uniID=uniID+1
			HOTSPOT poly_point_xy [x][1],poly_point_xy [x][2],poly_point_xy [x][3],uniID,poly_point_xy [x][1],2 : uniID=uniID+1
			HOTSPOT -1,poly_point_xy [x][2],poly_point_xy [x][3],uniID,poly_point_xy [x][1],3 : uniID=uniID+1
		endif
		if use_y then
			HOTSPOT poly_point_xy [x][1],0,poly_point_xy [x][3],uniID,poly_point_xy [x][2],1+128 : uniID=uniID+1
			HOTSPOT poly_point_xy [x][1],poly_point_xy [x][2],poly_point_xy [x][3],uniID,poly_point_xy [x][2],2 : uniID=uniID+1
			HOTSPOT poly_point_xy [x][1],-1,poly_point_xy [x][3],uniID,poly_point_xy [x][2],3 : uniID=uniID+1
		endif
		IF (ABS(poly_point_xy [x][1]-poly_point_xy [x+1][1]) > EPS) OR (ABS(poly_point_xy [x][2]-poly_point_xy [x+1][2]) > EPS) THEN
			IF x < poly_n+poly_closed THEN
				IF poly_point_xy [x][1] > poly_point_xy [x+1][1] THEN corr_x1 = 1 ELSE corr_x1 = 0
				xx1 = (poly_point_xy [x+1][1]- poly_point_xy [x][1])
				yy1 = (poly_point_xy [x+1][2]- poly_point_xy [x][2])
				IF ABS(xx1) > EPS THEN
					a1= ATN(yy1/xx1)+corr_x1*180 
				ELSE
					a1 = 90*SGN(yy1)
				ENDIF
				IF a1 < EPS AND a1 > -EPS THEN 
					d1 = ABS(xx1)		
				ELSE 
					d1 = ABS(yy1/sin(a1))
				ENDIF
				ADD xx1/2+poly_point_xy [x][1],yy1/2+poly_point_xy [x][2],0
				ROTz a1-90
				IF salta_punti_editabili = 0 and use_d THEN
					HOTSPOT 0,0,0,uniID,poly_3point_d [x],1+128 : uniID=uniID+1
					HOTSPOT poly_3point_d [x]-.02,0,0,uniID,poly_3point_d [x],2 : uniID=uniID+1
					HOTSPOT -1,0,0,uniID,poly_3point_d [x],3 : uniID=uniID+1
				ENDIF
				DEL 2
			ENDIF
		ENDIF
	NEXT x
	IF salta_punti_editabili = 0 THEN
		FOR x = 1 TO poly_n-1+poly_closed
			if use_x then
				HOTSPOT 0,poly_pointbis_check_y [x],poly_pointbis_check_z [x],uniID,poly_pointbis_x [x],1+128 : uniID=uniID+1
				HOTSPOT poly_pointbis_check_x [x],poly_pointbis_check_y [x],poly_pointbis_check_z [x],uniID,poly_pointbis_x [x],2 : uniID=uniID+1
				HOTSPOT -1,poly_pointbis_check_y [x],poly_pointbis_check_z [x],uniID,poly_pointbis_x [x],3 : uniID=uniID+1
			endif
			if use_y then
				HOTSPOT poly_pointbis_check_x [x],0,poly_pointbis_check_z [x],uniID,poly_pointbis_y [x],1+128 : uniID=uniID+1
				HOTSPOT poly_pointbis_check_x [x],poly_pointbis_check_y [x],poly_pointbis_check_z [x],uniID,poly_pointbis_y [x],2 : uniID=uniID+1
				HOTSPOT poly_pointbis_check_x [x],-1,poly_pointbis_check_z [x],uniID,poly_pointbis_y [x],3 : uniID=uniID+1
			endif
			if use_z then
				HOTSPOT poly_pointbis_check_x [x],poly_pointbis_check_y [x],0,uniID,poly_pointbis_z [x],1+128 : uniID=uniID+1
				HOTSPOT poly_pointbis_check_x [x],poly_pointbis_check_y [x],poly_pointbis_check_z [x],uniID,poly_pointbis_z [x],2 : uniID=uniID+1
				HOTSPOT poly_pointbis_check_x [x],poly_pointbis_check_y [x],-1,uniID,poly_pointbis_z [x],3 : uniID=uniID+1
			endif
		NEXT X
	ENDIF
return

"3d_end":


