!dict sort_data!if not(haskey(sort_data.isread)) then call "macro_get_sort" PARAMETERS RETURNED_PARAMETERS sort_data!if haskey(sort_data.isread) then !	if sort_data.isread = 0 then!		text2 0,0, "Сортамент прочитан с ошибкой"!		end!	endif!else!	text2 0,0, "Сортамент не прочитан"!	end!endif!Возвращает словарь с профилямиdim tname_prof[]dim iname_prof[] : i=0i=i+1 : iname_prof[i]=1 : tname_prof[i] = "Круглая труба"i=i+1 : iname_prof[i]=2 : tname_prof[i] = "Квадратная труба"i=i+1 : iname_prof[i]=3 : tname_prof[i] = "Швеллер"i=i+1 : iname_prof[i]=4 : tname_prof[i] = "Двутавр"i=i+1 : iname_prof[i]=5 : tname_prof[i] = "Уголок"i=i+1 : iname_prof[i]=6 : tname_prof[i] = "Лист"i=i+1 : iname_prof[i]=8 : tname_prof[i] = "Уголок гнутый"i=i+1 : iname_prof[i]=9 : tname_prof[i] = "Швеллер гнутый"dict _data_data.error = ""_data.name_profs = tname_prof_data.inx_name_profs = iname_profgosub "read_tip"gosub "read_profile"_data.isread = 1"m_end":exit _data"read_tip":	var1 = " ": var2 = " ": var3 = " ": var4 = " ": var5 = " "	ch1 = open("text", "Сортаменты.txt", "separator='\t', mode=ro, LIBRARY")	i = 2: j = 1	1:	n = input (ch1, i, 1, var1, var2, var3, var4, var5)	if n <> -1 then		inx = 0		for kk=1 to vardim1(tname_prof)			if var5 = tname_prof[kk] then				inx = iname_prof[kk]				kk = vardim1(tname_prof)			endif		next kk		if inx > 0 then			if haskey(_data.tip_p[inx].values) then 				j = vardim1(_data.tip_p[inx].values)+1			else				j = 1			endif			_data.tip_p[inx].values[j] = var1			_data.tip_p[inx].inx_values[j] = j			_data.tip_p[inx].f_name[j] = var3 + ".txt"			_data.tip_p[inx].obozn[j] = var2			_data.tip_p[inx].naen[j] = var5		endif		i = i + 1		goto 1	else		goto "close"	endif	"close":	close ch1return"read_profile":	f_name = ""	for i=1 to vardim1(iname_prof)		inx_prof = iname_prof[i]		if haskey(_data.tip_p[inx_prof].inx_values) then			for j=1 to vardim1(_data.tip_p[inx_prof].inx_values)				inx_tip = _data.tip_p[inx_prof].inx_values[j]				f_name = _data.tip_p[inx_prof].f_name[inx_tip]				ch2 = open("text", f_name, "separator='\t', mode=ro, LIBRARY")				k = 2 : m = 1				2:				v1 = ""				n = input(ch2, k, 2, v1)				if n <> -1 then					if vartype(v1)=1 then						if abs(v1)>0 then v1 = str("%.2", v1)					endif					if vartype(v1)=2 then						if strlen(v1)>1 then							_data.tip_p[inx_prof].profiles[inx_tip].names[m] = v1							_data.tip_p[inx_prof].profiles[inx_tip].inx_names[m] = k							m = m + 1						endif					endif					k = k + 1					goto 2				else					goto "close2"				endif				"close2":				close ch2			next j		endif	next ireturn