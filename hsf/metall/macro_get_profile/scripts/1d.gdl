!!!csum = "" : if haskey(_data.bort.read.csum) then csum = _data.bort.read.csum!!!profile_data.set = _data.bort.set!!!gosub "read_profile"!!!if flag then _data.bort.read = profile_data.read!!!"read_profile":!!!	new_csum = str("%.0",profile_data.set.name_prof)+":"+str("%.0",profile_data.set.tip_p)+":"+str("%.0",profile_data.set.profile)+":"+str("%.0",sort_data.version)!!!	if new_csum<>csum then!!!		flag = 0!!!		profile_data.error = ""!!!		if haskey(profile_data.read) then _d = REMOVEKEY (profile_data.read)!!!		call "macro_get_profile" PARAMETERS prof_data = profile_data, sort_data = sort_data, RETURNED_PARAMETERS profile_data!!!		if profile_data.error = "ok" then flag = 1!!!		if profile_data.error <> "ok" then goto "m_end"!!!	endif!!!returndict _dataprofn = REQUEST ("Name_of_main", "", main_name)_dataprof.error = main_name + " : "ves_p = 0: Ase = 0: ds = 0: ws = 0: wt = 0: ft = 0: rr = 0: tr = 0: dbf = 0: ax_y = 0 : has_hole = 0 : num = 0!Читаем сортамент, если его не передалиgosub "read_sort"if haskey(prof_data.set.name_prof) then	_dataprof.name_prof = prof_data.set.name_profelse	_dataprof.error = _dataprof.error + " ;Не определена форма профиля"	goto "m_end"endifif haskey(prof_data.set.tip_p) then	_dataprof.tip_p = prof_data.set.tip_pelse	_dataprof.error = _dataprof.error + " ;Не определён тип профиля"	goto "m_end"endifif haskey(prof_data.set.profile) then	_dataprof.profile = prof_data.set.profileelse	_dataprof.error = _dataprof.error + " ;Не задан профиль"	goto "m_end"endif_dataprof.version = sort_data.version_dataprof.csum = str("%.0",_dataprof.name_prof)+":"+str("%.0",_dataprof.tip_p)+":"+str("%.0",_dataprof.profile)+":"+str("%.0",_dataprof.version)f_name = ""if haskey(sort_data.tip_p[_dataprof.name_prof].f_name[_dataprof.tip_p]) then	f_name = sort_data.tip_p[_dataprof.name_prof].f_name[_dataprof.tip_p]else	_dataprof.error = _dataprof.error + " ;Не определён файл профиля"	goto "m_end"endifgosub "set_profile"gosub "set_boundbox"gosub "set_data"gosub "get_view"_dataprof.error = "ok""m_end":if haskey(prof_data.read) then _d = REMOVEKEY (prof_data.read)prof_data.read = _dataprofprof_data.error = _dataprof.errorif prof_data.error<>"ok" then print(_dataprof.error)exit prof_data"set_data":	!!!i=i+1 : iname_prof[i]=1 : tname_prof[i] = "Круглая труба"	!!!i=i+1 : iname_prof[i]=2 : tname_prof[i] = "Квадратная труба"	!!!i=i+1 : iname_prof[i]=3 : tname_prof[i] = "Швеллер"	!!!i=i+1 : iname_prof[i]=4 : tname_prof[i] = "Двутавр"	!!!i=i+1 : iname_prof[i]=5 : tname_prof[i] = "Уголок"	!!!i=i+1 : iname_prof[i]=6 : tname_prof[i] = "Лист"	!!!i=i+1 : iname_prof[i]=8 : tname_prof[i] = "Уголок гнутый"	!!!i=i+1 : iname_prof[i]=9 : tname_prof[i] = "Швеллер гнутый"	_dataprof.obozn = sort_data.tip_p[_dataprof.name_prof].obozn[_dataprof.tip_p]	_dataprof.naen_t = sort_data.tip_p[_dataprof.name_prof].naen[_dataprof.tip_p]	IF strstr(_dataprof.profile,"L")>0 then 		_dataprof.tip_profile = strsub(_dataprof.profile,2,strlen(_dataprof.profile))	else		_dataprof.tip_profile = _dataprof.profile	endifreturn"set_profile":	profile = ""	szelv = open("text", f_name, "separator = '\t', mode = ro, LIBRARY")	n = input(szelv, _dataprof.profile, 1, num, profile, ves_p, Ase, ds, ws, wt, ft, rr, tr, dbf, ax_y)	close szelv	if n>1 then		if vartype(profile) = 1 then profile = str("%.2",profile)		if vartype(num) = 1 then num= str("%.2",num)		if vartype(ds)=1 then			_dataprof.profile = profile			_dataprof.ds = ds/1000			_dataprof.ws = ws/1000			_dataprof.wt = wt/1000			_dataprof.ft = ft/1000			_dataprof.rr = rr/1000			_dataprof.tr = tr/1000			_dataprof.dbf = dbf/1000			_dataprof.ves_p = ves_p			_dataprof.Ase = Ase			_dataprof.ax_y = ax_y/1000			ds = ds/1000			ws = ws/1000			wt = wt/1000			ft = ft/1000			rr = rr/1000			tr = tr/1000			dbf = dbf/1000			ax_y = ax_y/1000					else			_dataprof.error = _dataprof.error + " : Ошибка при чтении профиля_ " + num			goto "m_end"		endif	else		_dataprof.error = _dataprof.error + " : Ошибка при чтении профиля " + f_name		goto "m_end"	endifreturn"set_boundbox":	if _dataprof.name_prof = 6 then		_dataprof.t_sten = Ase		_dataprof.aa = Ase		_dataprof.bb = Ase		_dataprof.ax_y = 0 : _dataprof.ax_x = 0		return	endif	!Максимальные размеры (ширина/высота)	if _dataprof.name_prof = 1 then		_dataprof.aa = ds/2		_dataprof.bb = _dataprof.aa		_dataprof.t_sten = ws		_dataprof.ax_y = 0 : _dataprof.ax_x = 0	endif	if _dataprof.name_prof = 2 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = wt		_dataprof.ax_y = 0 : _dataprof.ax_x = 0	endif	if _dataprof.name_prof = 3 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = ft		_dataprof.ax_y = -_dataprof.aa + ax_y : _dataprof.ax_x = 0	endif	if _dataprof.name_prof = 4 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = ft		_dataprof.ax_y = 0 : _dataprof.ax_x = 0	endif	if _dataprof.name_prof = 5 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = wt		_dataprof.ax_y = -_dataprof.aa + dbf : _dataprof.ax_x = -_dataprof.bb + tr	endif	if _dataprof.name_prof = 8 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = wt		_dataprof.ax_y = 0 : _dataprof.ax_x = 0	endif	if _dataprof.name_prof = 9 then		_dataprof.aa = ws/2		_dataprof.bb = ds/2		_dataprof.t_sten = wt		_dataprof.ax_y = 0 : _dataprof.ax_x = 0	endif		!Привязки края	aa = _dataprof.aa	bb = _dataprof.bb	t_sten = _dataprof.t_sten	ax_y = _dataprof.ax_y	ax_x = _dataprof.ax_x	i=0	i=i+1 : _dataprof.cpoint[i].x=0	 : _dataprof.cpoint[i].y=0 	        !0 Нет	i=i+1 : _dataprof.cpoint[i].x=ax_y	 : _dataprof.cpoint[i].y=ax_x 	!1 Ц.т.	i=i+1 : _dataprof.cpoint[i].x=-aa	 : _dataprof.cpoint[i].y=0 	    !2	i=i+1 : _dataprof.cpoint[i].x=-aa	 : _dataprof.cpoint[i].y=bb 	!3	i=i+1 : _dataprof.cpoint[i].x=0 	 : _dataprof.cpoint[i].y=bb 	!4	i=i+1 : _dataprof.cpoint[i].x=aa 	 : _dataprof.cpoint[i].y=bb	    !5	i=i+1 : _dataprof.cpoint[i].x=aa  	 : _dataprof.cpoint[i].y=0 	    !6	i=i+1 : _dataprof.cpoint[i].x=aa 	 : _dataprof.cpoint[i].y=-bb 	!7	i=i+1 : _dataprof.cpoint[i].x=0 	 : _dataprof.cpoint[i].y=-bb 	!8	i=i+1 : _dataprof.cpoint[i].x=-aa 	 : _dataprof.cpoint[i].y=-bb 	!9	!Для кругляка, квадрата, полосы и подобного не вырезаем внутреннее отверстие	has_hole = 1	_dataprof.has_hole = has_hole	!Периметр	!"Круглая труба"	if _dataprof.name_prof = 1 then _dataprof.perim = 3.146*ds/1000		!"Квадратная труба"	if _dataprof.name_prof = 2 then _dataprof.perim = (ws+ds)*2/1000	!"Швеллер"	!"Швеллер гнутый"	if _dataprof.name_prof = 3 or _dataprof.name_prof = 9 then _dataprof.perim = (ws*4+ds*2)/1000		!"Двутавр"	if _dataprof.name_prof = 4 then _dataprof.perim = (ws*4+ds*2)/1000		!"Уголок"	!"Уголок гнутый"	if _dataprof.name_prof = 5 or _dataprof.name_prof = 8 then _dataprof.perim = (ws*2+ds*2)/1000return"get_view":	if _dataprof.name_prof = 6 then return	det_lvl = 1 : n_form = 1	!Запись 2д детального вида	jt = 1 : gosub "prof_" + str("%.0",_dataprof.name_prof)  + "det"	det_lvl = 2 : gosub "write_2d_view"	!Запись 2д простого вида	jt = 1 : gosub "prof_" + str("%.0",_dataprof.name_prof)  + "simp"	det_lvl = 1 : gosub "write_2d_view"	!Запись 3д детального вида	jt = 15 : gosub "prof_" + str("%.0",_dataprof.name_prof)  + "det"	det_lvl = 2 : gosub "write_3d_view"	!Запись 3д простого вида	jt = 15 : gosub "prof_" + str("%.0",_dataprof.name_prof)  + "simp"	det_lvl = 1 : gosub "write_3d_view"	!Запись 3д для использования в операциях вычитания	show_hole = 0	jt = 15 : gosub "prof_" + str("%.0",_dataprof.name_prof)  + "simp"	det_lvl = 3 : gosub "write_3d_view"return"write_2d_view":	for i=1 to n_form		_dataprof._2d[det_lvl].unput[i].x = get(1)		_dataprof._2d[det_lvl].unput[i].y = get(1)		_dataprof._2d[det_lvl].unput[i].s = get(1)	next ireturn"write_3d_view":	for i=1 to n_form		_dataprof._3d[det_lvl].unput[i].x = get(1)		_dataprof._3d[det_lvl].unput[i].y = get(1)		_dataprof._3d[det_lvl].unput[i].s = get(1)	next ireturn"prof_1det":	tstart = NSP	put 0,0,900	put ds/2,360,4000+jt	put ds/2-ws,360,4000+jt	tend = NSP	n_form = (tend - tstart)/3return"prof_1simp":	tstart = NSP	put 0,0,900	put ds/2,360,4000+jt	put ds/2-ws,360,4000+jt	tend = NSP	n_form = (tend - tstart)/3return"prof_2simp":	tstart = NSP	put -ws/2,-ds/2,jt	put ws/2,-ds/2,jt	put ws/2,ds/2,jt	put -ws/2,ds/2,jt	put -ws/2,-ds/2,-1	if has_hole = 1 then		put wt-ws/2,wt-ds/2,jt		put ws/2-wt,wt-ds/2,jt		put ws/2-wt,ds/2-wt,jt		put wt-ws/2,ds/2-wt,jt		put wt-ws/2,wt-ds/2,-1	endif	tend = NSP	n_form = (tend - tstart)/3return"prof_2det":	tstart = NSP	put -ws/2+ft,-ds/2,jt	put ws/2-ft,-ds/2,jt	put ws/2-ft,-ds/2+ft,900	put 0,90,4000+jt	put ws/2,-ds/2+ft,jt	put ws/2,ds/2-ft,jt	put ws/2-ft,ds/2-ft,900	put 0,90,4000+jt	put ws/2-ft,ds/2,jt	put -ws/2+ft,ds/2,jt	put -ws/2+ft,ds/2-ft,900	put 0,90,4000+jt	put -ws/2,ds/2-ft,jt	put -ws/2,-ds/2+ft,jt	put -ws/2+ft,-ds/2+ft,900	put 0,90,4000+jt	put -ws/2+ft,-ds/2,jt	put -ws/2+ft,-ds/2,-1	if has_hole = 1 then		put -ws/2+ft,-ds/2+wt,jt		put ws/2-ft,-ds/2+wt,jt		put ws/2-ft,-ds/2+ft,900		put 0,90,4000+jt		put ws/2-wt,-ds/2+ft,jt		put ws/2-wt,ds/2-ft,jt		put ws/2-ft,ds/2-ft,900		put 0,90,4000+jt		put ws/2-ft,ds/2-wt,jt		put -ws/2+ft,ds/2-wt,jt		put -ws/2+ft,ds/2-ft,900		put 0,90,4000+jt		put -ws/2+wt,ds/2-ft,jt		put -ws/2+wt,-ds/2+ft,jt		put -ws/2+ft,-ds/2+ft,900		put 0,90,4000+jt		put -ws/2+ft,-ds/2+wt,jt		put -ws/2+ft,-ds/2+wt,-1	endif	tend = NSP	n_form = (tend - tstart)/3return"prof_3simp":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-ft,jt	put wt-ws*0.5,ds*0.5-ft,jt	put wt-ws*0.5,ft-ds*0.5,jt	put ws*0.5,ft-ds*0.5,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_3det":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-(ft-tr),jt	put tr,-90,2000+jt	put ws*0.5-tr,ds*0.5-ft,jt	put -ws*0.5+wt+rr,ds*0.5-ft,jt	put rr,90,2000+jt	put -ws*0.5+wt,ds*0.5-ft-rr,jt	put -ws*0.5+wt,-ds*0.5+ft+rr,jt	put rr,90,2000+jt	put -ws*0.5+wt+rr,-ds*0.5+ft,jt	put ws*0.5-tr,-ds*0.5+ft,jt	put tr,-90,2000+jt	put ws*0.5,-ds*0.5+ft-tr,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_4simp":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5+ft,jt	put -wt*0.5,-ds*0.5+ft,jt	put -wt*0.5,ds*0.5-ft,jt	put -ws*0.5,ds*0.5-ft,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-ft,jt	put wt*0.5,ds*0.5-ft,jt	put wt*0.5,-ds*0.5+ft,jt	put ws*0.5,-ds*0.5+ft,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_4det":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5+(ft-tr),jt	put tr,-90,2000+jt	put -ws*0.5+tr,-ds*0.5+ft,jt	put -wt*0.5-rr,-ds*0.5+ft,jt	put rr,90,2000+jt	put -wt*0.5,-ds*0.5+ft+rr,jt	put -wt*0.5,ds*0.5-ft-rr,jt	put rr,90,2000+jt	put -wt*0.5-rr,ds*0.5-ft,jt	put -ws*0.5+tr,ds*0.5-ft,jt	put tr,-90,2000+jt	put -ws*0.5,ds*0.5-(ft-tr),jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-(ft-tr),jt	put tr,-90,2000+jt	put ws*0.5-tr,ds*0.5-ft,jt	put wt*0.5+rr,ds*0.5-ft,jt	put rr,90,2000+jt	put wt*0.5,ds*0.5-ft-rr,jt	put wt*0.5,-ds*0.5+ft+rr,jt	put rr,90,2000+jt	put wt*0.5+rr,-ds*0.5+ft,jt	put ws*0.5-tr,-ds*0.5+ft,jt	put tr,-90,2000+jt	put ws*0.5,-ds*0.5+(ft-tr),jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_5simp":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_5det":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt-rr,ds*0.5,jt	put rr,-90,2000+jt	put -ws*0.5+wt,ds*0.5-rr,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put ws*0.5-rr,-ds*0.5+wt,jt	put rr,-90,2000+jt	put ws*0.5,-ds*0.5-rr+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_8simp":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_8det":	tstart = NSP	put ws*0.5,-ds*0.5,jt	put -ws*0.5+wt+ft,-ds*0.5,jt	put wt+ft,-90,2000+jt	put -ws*0.5,-ds*0.5+wt+ft,jt	put -ws*0.5,ds*0.5,jt	put -ws*0.5+wt,ds*0.5,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,jt	put ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_9simp":	tstart = NSP	put -ws*0.5,-ds*0.5,jt	put -ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-wt,jt	put wt-ws*0.5,ds*0.5-wt,jt	put wt-ws*0.5,wt-ds*0.5,jt	put ws*0.5,wt-ds*0.5,jt	put ws*0.5,-ds*0.5,jt	put -ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"prof_9det":	tstart = NSP	put ws*0.5,-ds*0.5,jt	put -ws*0.5+wt+ft,-ds*0.5,jt	put wt+ft,-90,2000+jt	put -ws*0.5,-ds*0.5+wt+ft,jt	put -ws*0.5,ds*0.5-wt-ft,jt	put wt+ft,-90,2000+jt	put -ws*0.5+wt+ft,ds*0.5,jt	put ws*0.5,ds*0.5,jt	put ws*0.5,ds*0.5-wt,jt	put -ws*0.5+wt+ft,ds*0.5-wt,jt	put ft,90,2000+jt	put -ws*0.5+wt,ds*0.5-wt-ft,jt	put -ws*0.5+wt,-ds*0.5+wt+ft,jt	put ft,90,2000+jt	put -ws*0.5+wt+ft,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5+wt,jt	put ws*0.5,-ds*0.5,-1	tend = NSP	n_form = (tend - tstart)/3return"read_sort":	call "macro_get_sort" PARAMETERS sort_data_in = sort_data RETURNED_PARAMETERS sort_data	if haskey(sort_data.error) then		if sort_data.error <> "ok" then			_dataprof.error = _dataprof.error + " ;Сортамент прочитан с ошибкой"			goto "m_end"		else			parameters sort_data = sort_data		endif	else		_dataprof.error = _dataprof.error + " ;Сортамент не прочитан"		goto "m_end"	endifreturn