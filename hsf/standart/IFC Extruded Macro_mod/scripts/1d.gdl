EPS = 0.0001! iProfileType:ID_PROFILETYPE_ARBITRARY		= 00ID_PROFILETYPE_RECTANGLE		= 10ID_PROFILETYPE_RECTANGLEHOLLOW	= 11ID_PROFILETYPE_ROUNDEDRECTANGLE	= 12ID_PROFILETYPE_CIRCLE			= 20ID_PROFILETYPE_CIRCLEHOLLOW		= 21ID_PROFILETYPE_ELLIPSE			= 22ID_PROFILETYPE_TRAPEZIUM		= 30ID_PROFILETYPE_CSHAPE			= 40ID_PROFILETYPE_ISHAPE			= 41ID_PROFILETYPE_LSHAPE			= 42ID_PROFILETYPE_TSHAPE			= 43ID_PROFILETYPE_USHAPE			= 44ID_PROFILETYPE_ZSHAPE			= 45ID_PROFILETYPE_CRANERAILASHAPE	= 50ID_PROFILETYPE_CRANERAILFSHAPE	= 51! iEntityType:ENTITY_BEAM					= 1ENTITY_COLUMN				= 2ENTITY_DISCRETE_ACCESSORY	= 3ENTITY_FOOTING				= 4ENTITY_MEMBER				= 5ENTITY_OPENING				= 6ENTITY_PILE					= 7ENTITY_PLATE				= 8if GLOB_MODPAR_NAME = "ProfileType" | iProfileType = -1 then	iProfileType = ID_PROFILETYPE_ARBITRARY	if ProfileType = "RECTANGLE" | ProfileType = `ПРЯМОУГОЛЬНИК`				then iProfileType = ID_PROFILETYPE_RECTANGLE	if ProfileType = "RECTANGLEHOLLOW" | ProfileType = `RECTANGLEHOLLOW`	then iProfileType = ID_PROFILETYPE_RECTANGLEHOLLOW	if ProfileType = "ROUNDEDRECTANGLE" | ProfileType = `ROUNDEDRECTANGLE`	then iProfileType = ID_PROFILETYPE_ROUNDEDRECTANGLE	if ProfileType = "CIRCLE" | ProfileType = `CIRCLE`						then iProfileType = ID_PROFILETYPE_CIRCLE	if ProfileType = "CIRCLEHOLLOW" | ProfileType = `CIRCLEHOLLOW`			then iProfileType = ID_PROFILETYPE_CIRCLEHOLLOW	if ProfileType = "ELLIPSE" | ProfileType = `ELLIPSE`					then iProfileType = ID_PROFILETYPE_ELLIPSE	if ProfileType = "TRAPEZIUM" | ProfileType = `TRAPEZIUM`				then iProfileType = ID_PROFILETYPE_TRAPEZIUM	if ProfileType = "CSHAPE" | ProfileType = `CSHAPE`						then iProfileType = ID_PROFILETYPE_CSHAPE	if ProfileType = "ISHAPE" | ProfileType = `ISHAPE`						then iProfileType = ID_PROFILETYPE_ISHAPE	if ProfileType = "LSHAPE" | ProfileType = `LSHAPE`						then iProfileType = ID_PROFILETYPE_LSHAPE	if ProfileType = "TSHAPE" | ProfileType = `TSHAPE`						then iProfileType = ID_PROFILETYPE_TSHAPE	if ProfileType = "USHAPE" | ProfileType = `USHAPE`						then iProfileType = ID_PROFILETYPE_USHAPE	if ProfileType = "ZSHAPE" | ProfileType = `ZSHAPE`						then iProfileType = ID_PROFILETYPE_ZSHAPE	if ProfileType = "CRANERAILASHAPE" | ProfileType = `CRANERAILASHAPE`	then iProfileType = ID_PROFILETYPE_CRANERAILASHAPE	if ProfileType = "CRANERAILFSHAPE" | ProfileType = `CRANERAILFSHAPE`	then iProfileType = ID_PROFILETYPE_CRANERAILFSHAPE	parameters iProfileType = iProfileTypeendif!show_if_vert=1 : show_if_gor=1 : show_if_ang=1!success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_vert", show_if_vert)!success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_gor", show_if_gor)!success = LIBRARYGLOBAL ("Libraryflobals-km", "show_if_ang", show_if_ang)!if el_type_view=1 and not(show_if_gor) and show then show = 0!if el_type_view=2 and not(show_if_vert) and show then show = 0!if el_type_view=3 and not(show_if_ang) and show then show = 0EXTRUDE_MIN_SEGMENTATION = 16ELLIPSE_MIN_SEGMENTATION = 64SEGMENTATION_ARC_LENGTH = 0.1arcRes = 32success = LIBRARYGLOBAL ("Libraryflobals-km", "gs_detlevel_3D", gs_detlevel_3D)IF gs_detlevel_3D=`Простой` then	EXTRUDE_MIN_SEGMENTATION = 16	ELLIPSE_MIN_SEGMENTATION = 64	SEGMENTATION_ARC_LENGTH = 0.1	arcRes = 32endif! ==============================================================================if GLOB_SCRIPT_TYPE = 3 | GLOB_SCRIPT_TYPE = 5 then	if iProfileType = ID_PROFILETYPE_ARBITRARY then		if	GLOB_SCRIPT_TYPE = 3 |\			(abs(ac_polygonBounds[1][1]) < EPS &\			 abs(ac_polygonBounds[1][2]) < EPS &\			 abs(ac_polygonBounds[2][1]) < EPS &\			 abs(ac_polygonBounds[2][2]) < EPS ) then		! if the ac_polygonBounds uninitialized			numPoints = min(ProfileNr, vardim1(Profile), vardim1(PStatus))			if numPoints > 2 then				for i=1 to numPoints					put Profile[i][1], Profile[i][2], PStatus[i]				next i			endif		else			put ac_polygonBounds[1][1], ac_polygonBounds[1][2], 0,				ac_polygonBounds[1][1], ac_polygonBounds[2][2], 0,				ac_polygonBounds[2][1], ac_polygonBounds[2][2], 0,				ac_polygonBounds[2][1], ac_polygonBounds[1][2], 0		endif	endif	if iProfileType = ID_PROFILETYPE_RECTANGLE then		dx = -ws / 2		dy = -ds / 2		put	dx,			dy,			0,			dx + ws,	dy,			0,			dx + ws,	dy + ds,	0,			dx,			dy + ds,	0	endif	if iProfileType = ID_PROFILETYPE_RECTANGLEHOLLOW then		dx = -bs / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 & gs_show_edge_fillet then			edgeStatus1 = (outr > EPS)			edgeStatus2 = (inr > EPS)			put	dx,				dy + ds - outr,	edgeStatus1,				dx,				dy + outr,		edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + outr,		dy,				edgeStatus1,				dx + bs - outr,	dy,				edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + bs,		dy + outr,		edgeStatus1,				dx + bs,		dy + ds - outr,	edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + bs - outr,	dy + ds,		edgeStatus1,				dx + outr,		dy + ds,		edgeStatus1,				outr,			90,				2000 + edgeStatus1			if GLOB_SCRIPT_TYPE = 3 then	! Hole				put	dx,					dy + ds - outr,		-1,					dx + wt,			dy + ds - wt - inr,	edgeStatus2,					dx + wt,			dy + wt + inr,		edgeStatus2,					inr,				90,					2000 + edgeStatus2,					dx + wt + inr,		dy + wt,			edgeStatus2,					dx + bs - wt - inr,	dy + wt,			edgeStatus2,					inr,				90,					2000 + edgeStatus2,					dx + bs - wt,		dy + wt + inr,		edgeStatus2,					dx + bs - wt,		dy + ds - wt - inr,	edgeStatus2,					inr,				90,					2000 + edgeStatus2,					dx + bs - wt - inr,	dy + ds - wt,		edgeStatus2,					dx + wt + inr,		dy + ds - wt,		edgeStatus2,					inr,				90,					2000 + edgeStatus2,					dx + wt,			dy + ds - wt - inr,	-1			endif		else			put	dx,			dy,			0,				dx + bs,	dy,			0,				dx + bs,	dy + ds,	0,				dx,			dy + ds,	0			if GLOB_SCRIPT_TYPE = 3 then	! Hole				put	dx,				dy,				-1,					dx + wt,		dy + wt,		0,					dx + bs - wt,	dy + wt,		0,					dx + bs - wt,	dy + ds - wt,	0,					dx + wt,		dy + ds - wt,	0,					dx + wt,		dy + wt,		-1			endif		endif	endif	if iProfileType = ID_PROFILETYPE_ROUNDEDRECTANGLE then		dx = -bs / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 & gs_show_edge_fillet then			edgeStatus1 = (outr > EPS)			put	dx,				dy + ds - outr,	edgeStatus1,				dx,				dy + outr,		edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + outr,		dy,				edgeStatus1,				dx + bs - outr,	dy,				edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + bs,		dy + outr,		edgeStatus1,				dx + bs,		dy + ds - outr,	edgeStatus1,				outr,			90,				2000 + edgeStatus1,				dx + bs - outr,	dy + ds,		edgeStatus1,				dx + outr,		dy + ds,		edgeStatus1,				outr,			90,				2000 + edgeStatus1,		dx,				dy + ds - outr, -1		else			put	dx,			dy,			0,				dx + bs,	dy,			0,				dx + bs,	dy + ds,	0,				dx,			dy + ds,	0,		dx,			dy,			-1		endif	endif	if	iProfileType = ID_PROFILETYPE_CIRCLE |\		iProfileType = ID_PROFILETYPE_CIRCLEHOLLOW then		arcRes = ROUND_INT (ds * pi / SEGMENTATION_ARC_LENGTH)		if arcRes < EXTRUDE_MIN_SEGMENTATION then			arcRes = EXTRUDE_MIN_SEGMENTATION		endif		if GLOB_SCRIPT_TYPE = 3 then			put	0, 0, 901,				ds / 2, 360, 4001			if iProfileType = ID_PROFILETYPE_CIRCLEHOLLOW then	! Hole				put ds / 2 - wt, 360, 4001			endif		else			alpha = 0			for i=1 to arcRes				put (ds / 2) * sin(alpha),					(ds / 2) * cos(alpha), 1				alpha = alpha + 360/arcRes			next i		endif	endif	if iProfileType = ID_PROFILETYPE_ELLIPSE then		if (SemiAxis1 > SemiAxis2) then			arcRes = ROUND_INT (pi * SemiAxis1 / SEGMENTATION_ARC_LENGTH)		else			arcRes = ROUND_INT (pi * SemiAxis2 / SEGMENTATION_ARC_LENGTH)		endif		if arcRes < ELLIPSE_MIN_SEGMENTATION then			arcRes = ELLIPSE_MIN_SEGMENTATION		endif				alpha = 0		for i=1 to arcRes			put SemiAxis1 * sin(alpha),				SemiAxis2 * cos(alpha), 1			alpha = alpha + 360/arcRes		next i	endif	if iProfileType = ID_PROFILETYPE_TRAPEZIUM then		put	0,						0,	0,			ws,						0,	0,			TopXOffset + TopXDim,	ds,	0,			TopXOffset,				ds,	0	endif	if iProfileType = ID_PROFILETYPE_CSHAPE then		dx = -ws / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS) then				edgeStatus = (rr > EPS)				put	dx + ws,		dy + Girth,		0,					dx + ws-wt,		dy + Girth,		0,					dx + ws-wt,		dy + rr+wt,		edgeStatus,					rr,				-90,			2000 + edgeStatus,					dx + ws-wt-rr,	dy + wt,		edgeStatus,					dx + wt+rr, 	dy + wt,		edgeStatus,					rr,				-90,			2000 + edgeStatus,					dx + wt,		dy + wt+rr,		edgeStatus,					dx + wt,		dy + ds-wt-rr,	edgeStatus,					rr,				-90,			2000 + edgeStatus,					dx + wt+rr,		dy + ds-wt,		edgeStatus,					dx + ws-wt-rr,	dy + ds-wt,		edgeStatus,					rr,				-90,			2000 + edgeStatus,					dx + ws-wt,		dy + ds-wt-rr,	edgeStatus,					dx + ws-wt,		dy + ds-Girth,	0,					dx + ws,		dy + ds-Girth,	0,					dx + ws,		dy + ds-rr,		edgeStatus,					rr,				90,				2000 + edgeStatus,					dx + ws-rr,		dy + ds,		edgeStatus,					dx + rr,		dy + ds,		edgeStatus,					rr,				90,				2000 + edgeStatus,					dx,				dy + ds-rr,		edgeStatus,					dx,				dy + rr,		edgeStatus,					rr,				90,				2000 + edgeStatus,					dx + rr,		dy,				edgeStatus,					dx + ws-rr,		dy,				edgeStatus,					rr,				90,				2000 + edgeStatus,					dx + ws,		dy + rr,		edgeStatus,					dx + ws,		dy + Girth,		-1			else				put	dx + ws,		dy + Girth,		0,					dx + ws - wt,	dy + Girth,		0,					dx + ws - wt,	dy + wt,		0,					dx + wt,		dy + wt,		0,					dx + wt,		dy + ds-wt,		0,					dx + ws - wt,	dy + ds-wt,		0,					dx + ws - wt,	dy + ds-Girth,	0,					dx + ws,		dy + ds-Girth,	0,					dx + ws,		dy + ds,		0,					dx,				dy + ds,		0,					dx,				dy,				0,					dx + ws,		dy,				0,					dx + ws,		dy + Girth,		-1			endif		else			put	dx + ws,	dy,			0,				dx + ws,	dy + ds,	0,				dx,			dy + ds,	0,				dx,			dy,			0		endif	endif	if iProfileType = ID_PROFILETYPE_ISHAPE then		dx = -ws / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS) then				edgeStatus = (rr > EPS)				put	dx + ws,   				dy,				0,					dx + ws, 				dy + ft,		0,					dx + ws-(ws-wt)/2+rr,	dy + ft,		edgeStatus,					rr,						-90,			2000 + edgeStatus,					dx + ws-(ws-wt)/2,		dy + ft+rr,		edgeStatus,					dx + ws-(ws-wt)/2,		dy + ds-ft-rr,	edgeStatus,					rr,						-90,			2000 + edgeStatus,					dx + ws-(ws-wt)/2+rr,	dy + ds-ft,		edgeStatus,					dx + ws,				dy + ds-ft,		0,					dx + ws,				dy + ds,		0,					dx,						dy + ds,		0,					dx,						dy + ds-ft,		0,					dx + (ws-wt)/2-rr,		dy + ds-ft,		edgeStatus,					rr,						-90,			2000 + edgeStatus,					dx + (ws-wt)/2,			dy + ds-ft-rr,	edgeStatus,					dx + (ws-wt)/2,			dy + ft+rr,		edgeStatus,					rr,						-90,			2000 + edgeStatus,					dx + (ws-wt)/2-rr,		dy + ft,		edgeStatus,					dx,						dy + ft,		0,					dx,						dy,				0,					dx + ws,				dy,				-1			else				put	dx + ws,   			dy,				0,					dx + ws, 			dy + ft,		0,					dx + ws-(ws-wt)/2,	dy + ft,		0,					dx + ws-(ws-wt)/2,	dy + ds-ft,		0,					dx + ws,			dy + ds-ft,		0,					dx + ws,			dy + ds,		0,					dx,					dy + ds,		0,					dx,					dy + ds-ft,		0,					dx + (ws-wt)/2,		dy + ds-ft,		0,					dx + (ws-wt)/2,		dy + ft,		0,					dx,					dy + ft,		0,					dx,					dy,				0,					dx + ws,   			dy,				-1			endif		else			put	dx,			dy,		0,				dx + ws,	dy,		0,				dx + ws,	dy + ds,0,				dx,			dy + ds,0		endif	endif	if iProfileType = ID_PROFILETYPE_LSHAPE then		dx = -ws / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS | tr > EPS) then				edgeStatus1 = (rr > EPS)				edgeStatus2 = (tr > EPS)				put	dx,			dy,			0,					dx + ws,	dy,			0,					dx + ws,	dy + wt-tr,	edgeStatus2,					tr,			90,			2000 + edgeStatus2, ! first arc					dx + ws-tr,	dy + wt,	edgeStatus2,					dx + wt+rr,	dy + wt,	edgeStatus1,					rr,			-90,		2000 + edgeStatus1, ! fillet arc					dx + wt,	dy + wt+rr,	edgeStatus1,					dx + wt,	dy + ds-tr,	edgeStatus2,					tr,			90,			2000 + edgeStatus2, ! second arc					dx + wt-tr,	dy + ds,	edgeStatus2,					dx,			dy + ds,	0,					dx,			dy,			-1			else				put	dx,			dy,			0,					dx + ws,	dy,			0,					dx + ws,	dy + wt,	0,					dx + wt,	dy + wt,	0,					dx + wt,	dy + ds,	0,					dx,			dy + ds,	0,					dx,			dy,			-1			endif		else			put	dx,			dy,			0,				dx + ws,	dy,			0,				dx + ws,	dy + wt,	0,				dx + wt,	dy + wt,	0,				dx + wt,	dy + ds,	0,				dx,			dy + ds,	0		endif	endif	if iProfileType = ID_PROFILETYPE_TSHAPE then		dx = -ws / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS | tr > EPS | etr > EPS) then				edgeStatus1 = (rr > EPS)				edgeStatus2 = (tr > EPS)				edgeStatus3 = (etr > EPS)				put	dx + ws,			dy + ds,		0,					dx + ws,			dy + ds-ft+tr,	edgeStatus2,					tr,					-90,			2000 + edgeStatus2,					dx + ws-tr,			dy + ds-ft,		edgeStatus2,					dx + ws/2+wt/2+rr,	dy + ds-ft,		edgeStatus1,					rr,					90,				2000 + edgeStatus1,					dx + ws/2+wt/2,		dy + ds-ft-rr,	edgeStatus1,					dx + ws/2+wt/2,		dy + etr,		edgeStatus3,					etr,				-90,			2000 + edgeStatus3,					dx + ws/2+wt/2-etr,	dy,				edgeStatus3,					dx + ws/2-wt/2+etr,	dy,				edgeStatus3,					etr,				-90,			2000 + edgeStatus3,					dx + ws/2-wt/2,		dy + etr,		edgeStatus3,					dx + ws/2-wt/2,		dy + ds-ft-rr,	edgeStatus1,					rr,					90,				2000 + edgeStatus1,					dx + ws/2-wt/2-rr,	dy + ds-ft,		edgeStatus1,					dx + tr,			dy + ds-ft,		edgeStatus2,					tr,					-90,			2000 + edgeStatus2,					dx,					dy + ds-ft+tr,	edgeStatus2,					dx,					dy + ds,		0,					dx + ws,			dy + ds,		-1			else				put	dx + ws,		dy + ds,	0,					dx + ws,		dy + ds-ft,	0,					dx + ws/2+wt/2,	dy + ds-ft,	0,					dx + ws/2+wt/2,	dy,			0,					dx + ws/2-wt/2,	dy,			0,					dx + ws/2-wt/2,	dy + ds-ft,	0,					dx,				dy + ds-ft,	0,					dx,				dy + ds,	0,					dx + ws,		dy + ds,	-1			endif		else			put	dx + ws,		dy + ds,	0,				dx + ws,		dy + ds-ft,	0,				dx + ws/2+wt/2,	dy + ds-ft,	0,				dx + ws/2+wt/2,	dy,			0,				dx + ws/2-wt/2,	dy,			0,				dx + ws/2-wt/2,	dy + ds-ft,	0,				dx,				dy + ds-ft,	0,				dx,				dy + ds,	0		endif	endif	if iProfileType = ID_PROFILETYPE_USHAPE then		dx = -ws / 2		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS | tr > EPS) then				edgeStatus1 = (rr > EPS)				edgeStatus2 = (tr > EPS)				put	dx,			dy,				0,					dx,			dy + ds,		0,					dx + ws,	dy + ds,		0,					dx + ws,	dy + ds-ft+tr,	edgeStatus2,					tr,			-90,			2000 + edgeStatus2,					dx + ws-tr,	dy + ds-ft,		edgeStatus2,					dx + wt+rr,	dy + ds-ft,		edgeStatus1,					rr,			90,				2000 + edgeStatus1,					dx + wt,	dy + ft+rr,		edgeStatus1,					rr,			90,				2000 + edgeStatus1,					dx + wt+rr,	dy + ft,		edgeStatus1,					dx + ws-tr,	dy + ft,		edgeStatus2,					tr,			-90,			2000 + edgeStatus2,					dx + ws,	dy + ft-tr,		edgeStatus2,					dx + ws,	dy,				0,					dx,			dy,				-1			else				put	dx,			dy,				0,					dx,			dy + ds,		0,					dx + ws,	dy + ds,		0,					dx + ws,	dy + ds-ft,		0,					dx + wt,	dy + ds-ft,		0,					dx + wt,	dy + ft,		0,					dx + ws,	dy + ft,		0,					dx + ws,	dy,				0,					dx,			dy,				-1			endif		else			put	dx + ws,	dy,				0,				dx,			dy,				0,				dx,			dy + ds,		0,				dx + ws,	dy + ds,		0		endif	endif	if iProfileType = ID_PROFILETYPE_ZSHAPE then		if bNeedOperationToMigrate then			dx = -ws/2		else			dx = -ws + wt / 2		endif		dy = -ds / 2		if GLOB_SCRIPT_TYPE = 3 then			if gs_show_edge_fillet & (rr > EPS | tr > EPS) then				edgeStatus1 = (rr > EPS)				edgeStatus2 = (tr > EPS)				put	dx + 2*ws-wt,		dy,				0,					dx + 2*ws-wt,		dy + ft-tr,		edgeStatus2,					tr,					90,				2000 + edgeStatus2,					dx + 2*ws-wt-tr,	dy + ft,		edgeStatus2,					dx + ws+rr,			dy + ft,		edgeStatus1,					rr,					-90,			2000 + edgeStatus1,					dx + ws,			dy + ft+rr,		edgeStatus1,					dx + ws,			dy + ds,		0,					dx,					dy + ds,		0,					dx,					dy + ds-ft+tr,	edgeStatus2,					tr,					90,				2000 + edgeStatus2,					dx + tr,			dy + ds-ft,		edgeStatus2,					dx + ws-wt-rr,		dy + ds-ft,		edgeStatus1,					rr,					-90,			2000 + edgeStatus1,					dx + ws-wt,			dy + ds-ft-rr,	edgeStatus1,					dx + ws-wt,			dy,				0,					dx + 2*ws-wt,		dy,				-1			else				put	dx + 2*ws-wt,	dy,				0,					dx + 2*ws-wt,	dy + ft,		0,					dx + ws,		dy + ft,		0,					dx + ws,		dy + ds,		0,					dx,				dy + ds,		0,					dx,				dy + ds-ft,		0,					dx + ws-wt,		dy + ds-ft,		0,					dx + ws-wt,		dy,				0,					dx + 2*ws-wt,	dy,				-1			endif		else			put	dx + 2*ws-wt,		dy,				0,				dx + 2*ws-wt,		dy + ft,		0,				dx + ws,			dy + ft,		0,				dx + ws,			dy + ds,		0,				dx,					dy + ds,		0,				dx,					dy + ds-ft,		0,				dx + ws-wt,			dy + ds-ft,		0,				dx + ws-wt,			dy,				0		endif	endif	if iProfileType = ID_PROFILETYPE_CRANERAILASHAPE then		dx = -BaseWidth2 / 2		dy = -h/2		if not(gs_show_edge_fillet) then tr = 0		edgeStatus = (tr > EPS)		if GLOB_SCRIPT_TYPE = 3 then			put	dx,									dy,					0,				dx + BaseWidth2,					dy,					0,				dx + BaseWidth2,					dy + BaseDepth1,	0,				dx + BaseWidth2/2+BaseWidth4/2,		dy + BaseDepth3,	0,				dx + BaseWidth2/2+wt/2,				dy + BaseDepth2,	0,				dx + BaseWidth2/2+wt/2,				dy + h-HeadDepth2,	0,				dx + BaseWidth2/2+HeadWidth/2,		dy + h-HeadDepth3,	0,				dx + BaseWidth2/2+HeadWidth/2,		dy + h-tr,			edgeStatus,				tr,									90,					2000 + edgeStatus,				dx + BaseWidth2/2+HeadWidth/2-tr,	dy + h,				edgeStatus,				dx + BaseWidth2/2-HeadWidth/2+tr,	dy + h,				edgeStatus,				tr,									90,					2000 + edgeStatus,				dx + BaseWidth2/2-HeadWidth/2,		dy + h-tr,			edgeStatus,				dx + BaseWidth2/2-HeadWidth/2,		dy + h-HeadDepth3,	0,				dx + BaseWidth2/2-wt/2,				dy + h-HeadDepth2,	0,				dx + BaseWidth2/2-wt/2,				dy + BaseDepth2,	0,				dx + BaseWidth2/2-BaseWidth4/2,		dy + BaseDepth3,	0,				dx,									dy + BaseDepth1,	0,				dx,									dy,					-1		else			put	dx,								dy,		0,				dx + BaseWidth2,				dy,		0,				dx + BaseWidth2/2+HeadWidth/2,	dy + h,	0,				dx + BaseWidth2/2-HeadWidth/2,	dy + h,	0		endif	endif	if iProfileType = ID_PROFILETYPE_CRANERAILFSHAPE then		dx = -ws / 2		dy = -h/2		if not(gs_show_edge_fillet) then tr = 0		edgeStatus = (tr > EPS)		if GLOB_SCRIPT_TYPE = 3 then			put	dx,				dy,					0,				dx + ws,		dy,					0,				dx + ws,		dy + BaseDepth1,	0,				dx + ws/2+wt/2,	dy + BaseDepth2,	0,				dx + ws/2+wt/2,	dy + h-HeadDepth2,	0,				dx + ws,		dy + h-HeadDepth3,	0,				dx + ws,		dy + h-tr,			edgeStatus,				tr,				90,					2000 + edgeStatus,				dx + ws-tr,		dy + h,				edgeStatus,				dx + tr,		dy + h,				edgeStatus,				tr,				90,					2000 + edgeStatus,				dx,				dy + h-tr,			edgeStatus,				dx,				dy + h-HeadDepth3,	0,				dx + ws/2-wt/2,	dy + h-HeadDepth2,	0,				dx + ws/2-wt/2,	dy + BaseDepth2,	0,				dx,				dy + BaseDepth1,	0,				dx,				dy,					-1		else			put	dx,			dy,		0,				dx + ws,	dy,		0,				dx + ws,	dy + h,	0,				dx,			dy + h,	0		endif	endifendif"MasterEnd":